{"version":3,"sources":["../src/main.js"],"names":["esc","encodeURIComponent","param","replace","escape","isNumeric","isNaN","parseFloat","n","isFinite","httpBuildQuery","queryData","numericPrefix","argSeparator","tempKey","query","Object","keys","map","res","key","k","join","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,SAANA,GAAM;AAAA,SACVC,mBAAmBC,KAAnB,EAA0BC,OAA1B,CAAkC,UAAlC,EAA8CC,MAA9C,EAAsDD,OAAtD,CAA8D,MAA9D,EAAsE,GAAtE,CADU;AAAA,CAAZ;AAEA,IAAME,YAAY,SAAZA,SAAY;AAAA,SAAK,CAACC,MAAMC,WAAWC,CAAX,CAAN,CAAD,IAAyBC,SAASD,CAAT,CAA9B;AAAA,CAAlB;;AAEA,IAAME,iBAAiB,SAAjBA,cAAiB,CACrBC,SADqB,EAKlB;AAAA,MAHHC,aAGG,uEAHa,IAGb;AAAA,MAFHC,YAEG,uEAFY,GAEZ;AAAA,MADHC,OACG,uEADO,IACP;;AACH,MAAMC,QAAQC,OAAOC,IAAP,CAAYN,SAAZ,EAAuBO,GAAvB,CAA2B,aAAK;AAC5C,QAAIC,YAAJ;AACA,QAAIC,MAAMC,CAAV;;AAEA,QAAIP,OAAJ,EAAa;AACXM,YAAO,GAAEN,OAAQ,IAAGM,GAAI,GAAxB;AACD;;AAED,QAAI,OAAOT,UAAUU,CAAV,CAAP,KAAwB,QAA5B,EAAsC;AACpCF,YAAMT,eAAeC,UAAUU,CAAV,CAAf,EAA6B,IAA7B,EAAmCR,YAAnC,EAAiDO,GAAjD,CAAN;AACD,KAFD,MAEO;AACL,UAAIR,aAAJ,EAAmB;AACjBQ,cAAMf,UAAUe,GAAV,IAAkB,GAAER,aAAc,GAAE,CAACQ,GAAI,EAAzC,GAA6CA,GAAnD;AACD;AACDD,YAAO,GAAEnB,IAAIoB,GAAJ,CAAS,IAAGpB,IAAIW,UAAUU,CAAV,CAAJ,CAAkB,EAAvC;AACD;;AAED,WAAOF,GAAP;AACD,GAlBa,CAAd;;AAoBA,SAAOJ,MAAMO,IAAN,CAAWT,YAAX,EAAyBV,OAAzB,CAAiC,UAAjC,EAA6C,EAA7C,CAAP;AACD,CA3BD;;AA6BAoB,OAAOC,OAAP,GAAiBd,cAAjB","file":"main.js","sourcesContent":["const esc = param =>\n  encodeURIComponent(param).replace(/[!'()*]/g, escape).replace(/%20/g, '+');\nconst isNumeric = n => !isNaN(parseFloat(n)) && isFinite(n);\n\nconst httpBuildQuery = (\n  queryData,\n  numericPrefix = null,\n  argSeparator = '&',\n  tempKey = null\n) => {\n  const query = Object.keys(queryData).map(k => {\n    let res;\n    let key = k;\n\n    if (tempKey) {\n      key = `${tempKey}[${key}]`;\n    }\n\n    if (typeof queryData[k] === 'object') {\n      res = httpBuildQuery(queryData[k], null, argSeparator, key);\n    } else {\n      if (numericPrefix) {\n        key = isNumeric(key) ? `${numericPrefix}${+key}` : key;\n      }\n      res = `${esc(key)}=${esc(queryData[k])}`;\n    }\n\n    return res;\n  });\n\n  return query.join(argSeparator).replace(/[!'()*]/g, '');\n};\n\nmodule.exports = httpBuildQuery;\n"]}